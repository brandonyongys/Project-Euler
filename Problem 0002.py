# -*- coding: utf-8 -*-
"""
Created on Tue Sep 12 08:18:07 2017

@author: ysyong

Project Euler 2:
Even Fibonacci numbers
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
"""
First step is to define the Fibonacci number
"""
import time
start = time.time()
def fib(n):
    if n ==0 :
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1)+fib(n-2)

"""After defining the Fibonacci number, the next step is to sum up all the even-valued Fibonacci terms up to 4M.
We first start from the very first term.
1) Calculate the Fib number
2) Identify whether is the term less than 4M
3) If yes, check whether the term is an even value
4) If no, calculate the next Fib no
5) If yes, add the term to the existing total
6) If no, calculate the next term
7) Loop is terminated when the calculate Fib no is more than 4M
"""

total = 0
n = 0

while fib(n) <= 4000000:
    if fib(n)%2 == 0:
        total += fib(n)
    n += 1

print("Sum of the even-valued Fibonacci terms (up to 4M) is:",total)
end = time.time()
print(end - start)